---
apiVersion: v1
kind: ConfigMap
metadata:
  name: example-redis-config
  namespace: demo
data:
  redis-config: |
    appendonly yes
    protected-mode no
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: my-pv-volume
#   namespace: demo
# spec:
#   storageClassName: manual
#   capacity:
#     storage: 5Gi
#   accessModes:
#     - ReadWriteOnce
#   awsElasticBlockStore:
#     volumeID: vol-06633b8e089b7f602
    # fsType: ext4
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-pv-volume
  namespace: demo
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pv-claim
  namespace: demo
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: demo
  labels:
    app: redis
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-server
  namespace: demo
spec:
  serviceName: "redis"
  replicas: 3
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
     volumes:
      - name: my-pv-storage
        persistentVolumeClaim:
          claimName: my-pv-claim 
      - name: config
        configMap:
          name: example-redis-config
          items:
          - key: redis-config
            path: redis.conf
     containers:
      - name: redis
        image: redis:6.2.6-alpine3.14
        command:
          - redis-server
          - "/redis-master/redis.conf"
        ports:
        - containerPort: 6379
          name: web
        volumeMounts:
        - name: my-pv-storage
          mountPath: /data
        - name: config
          mountPath: /redis-master

